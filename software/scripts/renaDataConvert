#!/usr/bin/env python3

import pyrogue
pyrogue.addLibraryPath('../python')

import ucsc_hn_lib
import sys
import time
import threading

def process_data (inFile, outFile, df):
    df.convertFile(inFile, outFile)

if len(sys.argv) != 3:
    print("Usage: renaDataConvert inFile outFile")
    sys.exit(-1)

df = ucsc_hn_lib.RenaDataFormat()

runThread = threading.Thread(target=process_data, args=(sys.argv[1], sys.argv[2], df))
runThread.start()
ltime = time.time()
print(f"Converting {sys.argv[1]} to {sys.argv[2]}. Updating status every 10 seconds.")

def show_progress(df):
    fileSize = df.getFileSize()
    fileRead = df.getFileRead()
    readBytes = df.getByteCount()
    readFrames = df.getFrameCount()
    dropCount = df.getDropCount()
    sampCount = df.getSampleCount()

    ltime = time.time()

    pct = int((float(fileRead) / float(fileSize)) * 100.0);
    vPct = int((float(readBytes) / float(fileRead)) * 100.0);

    print(f"Read {fileRead} of {fileSize} bytes, {pct} pct. Valid = {readBytes}, {vPct} pct, Frames = {readFrames}, drops = {dropCount}, samples = {sampCount}")

while runThread.is_alive():

    if time.time() - ltime > 10:
        show_progress(df)
        ltime = time.time()

show_progress(df)
